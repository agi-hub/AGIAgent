{
  "spawn_agent": {
    "description": "Spawn a new AGIAgent agent to handle a specific task asynchronously in a shared workspace. All spawned agents run in the background for parallel execution. Useful for complex task decomposition and parallel execution.",
    "parameters": {
      "type": "object",
      "properties": {
        "task_description": {
          "type": "string",
          "description": "Description of the task for the new AGIAgent agent"
        },
        "agent_id": {
          "type": "string",
          "description": "Custom agent ID (optional, will auto-generate if not provided). Must match format 'agent_XXX' where XXX is a 3-digit number"
        },
        "api_key": {
          "type": "string",
          "description": "API key for the new agent (optional, will use current if not provided)"
        },
        "model": {
          "type": "string",
          "description": "Model name for the new agent (optional, will use current if not provided)"
        },
        "max_loops": {
          "type": "integer",
          "description": "Maximum execution loops for the new agent (default: 25)"
        },
        "MCP_config_file": {
          "type": "string",
          "description": "Custom MCP configuration file path (optional, defaults to 'config/mcp_servers.json')"
        },
        "prompts_folder": {
          "type": "string",
          "description": "Custom prompts folder path (optional, defaults to 'prompts'). Allows using different prompt templates and tool interfaces"
        }
      },
      "required": ["task_description"]
    }
  },
  "send_P2P_message": {
    "description": "Send a peer-to-peer (P2P) message to a specific agent or manager for direct communication. Use 'manager' as receiver_id to send messages to the manager. The content parameter is REQUIRED and must be provided as a string or object.",
    "parameters": {
      "type": "object",
      "properties": {
        "receiver_id": {
          "type": "string",
          "description": "Target agent ID to send message to (use 'manager' for manager)"
        },
        "content": {
          "type": "string",
          "description": "Message content as string. This is a REQUIRED parameter. Example: 'Hello, please respond to this message' or 'Task completed successfully'"
        }
      },
      "required": ["receiver_id", "content"]
    }
  },
  "send_broadcast_message": {
    "description": "Send a message to all active agents in the system. The content parameter is REQUIRED and must be provided as a string.",
    "parameters": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "Message content as string. This is a REQUIRED parameter. Example: 'System maintenance in 5 minutes' or 'All agents please report status'"
        }
      },
      "required": ["content"]
    }
  },
  "read_received_messages": {
    "description": "Fetch messages from your own mailbox, including broadcast messages and P2P messages. Messages are automatically marked as read after retrieval.",
    "parameters": {
      "type": "object",
      "properties": {
        "include_read": {
          "type": "boolean",
          "description": "Include already read messages (default: false)"
        }
      },
      "required": []
    }
  },
  "send_status_update_to_manager": {
    "description": "Send a status update from an agent to the manager about task progress.",
    "parameters": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "ID of the agent sending the update. ALWAYS use 'current_agent' to auto-detect the correct agent ID.",
          "default": "current_agent"
        },
        "round_number": {
          "type": "integer",
          "description": "Current execution round number"
        },
        "task_completed": {
          "type": "boolean",
          "description": "Whether the task is completed"
        },
        "llm_response_preview": {
          "type": "string",
          "description": "Preview of LLM response (first 200 characters)"
        },
        "tool_calls_summary": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of tool names called in this round"
        },
        "current_task_description": {
          "type": "string",
          "description": "Description of current task being worked on"
        },
        "error_message": {
          "type": "string",
          "description": "Error message if any error occurred"
        }
      },
      "required": ["agent_id", "round_number", "task_completed", "llm_response_preview", "tool_calls_summary"]
    }
  },
  "get_agent_session_info": {
    "description": "Get comprehensive information about current agent session including session statistics, agent details, and list of all active agents.",
    "parameters": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  "terminate_agent": {
    "description": "Terminate a specific AGIAgent agent. Use 'self' or leave agent_id empty to terminate current agent. This sends a terminate signal to the agent, causing it to stop execution and clean up resources.",
    "parameters": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "ID of the agent to terminate. Use 'self' or leave empty to terminate current agent."
        },
        "reason": {
          "type": "string",
          "description": "Reason for termination (optional)"
        }
      },
      "required": []
    }
  }
} 