代码转文档

## 目标
分析给定的代码库，生成详细、结构化的技术文档，涵盖系统各个方面的深入解析。论述详细。
要求先对代码库先进行足够的了解，掌握用途、目标、整体架构等关键信息，之后按照文档结构要求进行输出，输出过程中，可以进一步详细阅读代码仓库中的代码及文档。
如果代码未被下载请先下载再分析。
尽量使用grep, codebase_search, terminal tools及代码分析工具（如python ast标准库）进行分析，尽量避免阅读大量代码。
使用SVG/mermaid绘制各种样式的流程图、概念图等

## 文档结构要求

### 1. 概述 (Overview)
- 1.1 项目简介
- 1.2 项目主要功能
- 1.3 技术栈概览

### 2. 系统架构 (System Architecture)
- 2.1 整体架构
- 2.2 核心组件
- 2.3 主要对外接口
- 2.4 主要内部接口

### 3. 核心特性 (Key Features)
- 3.1 主要功能特性
- 3.2 主要性能特性

### 4. 组件详细描述 (Core Components) 
- 4.1 组件XXX详细描述
    （含架构图）
- 4.2 ...

### 5. 核心工作流程 (Core Workflows)
- 5.1 XXX业务流程详细描述
- 5.2 ...

### 6. 重点函数与API (Key Functions & APIs)
- 6.1 核心函数详解
- 6.2 公共API接口
- 6.3 内部工具函数

### 7. 使用示例与案例 (Examples and Use Cases)
- 7.1 基础使用案例
- 7.2 高级应用场景
- 7.3 集成案例

## 输出格式要求

- 使用 Markdown 格式
- 代码块使用语法高亮
- 重要内容使用标注和高亮
- 提供目录和交叉引用
- 包含必要的图表和示意图

请根据用户需求所用的语言确定撰写语言，如果用户的需求为英文则用英文撰写，如果为中文则用中文撰写。